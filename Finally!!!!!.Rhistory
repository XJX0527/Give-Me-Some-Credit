rm(list = ls())
setwd(dir="C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit")
getwd()
train <- read.csv('C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/划分后的训练集.csv',stringsAsFactors = FALSE)
test <- read.csv('C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/划分后的测试集.csv',stringsAsFactors = FALSE)
totalgood = as.numeric(table(train$y))[2]
totalbad = as.numeric(table(train$y))[1]
#将自变量的值转化为WOE值
getWOE <- function(a,p,q){
Good <- as.numeric(table(train$y[a > p & a <= q]))[2]
Bad <- as.numeric(table(train$y[a > p & a <= q]))[1]
WOE <- log((Bad/totalbad)/(Good/totalgood),base = exp(1))
return(WOE)
}
cutx2= c(-Inf,30,35,40,45,50,55,60,Inf)
plot(cut(train$x2,cutx2))
x2_woe1=getWOE(train$x2,-Inf,30)
x2_woe2=getWOE(train$x2,30,35)
x2_woe3=getWOE(train$x2,35,40)
x2_woe4=getWOE(train$x2,40,45)
x2_woe5=getWOE(train$x2,45,50)
x2_woe6=getWOE(train$x2,50,55)
x2_woe7=getWOE(train$x2,55,60)
x2_woe8=getWOE(train$x2,60,Inf)
x2.woe=c(x2_woe1,x2_woe2,x2_woe3,x2_woe4,x2_woe5,x2_woe6,x2_woe7,x2_woe8)
x2.woe
tmp.x2 <- 0
for(i in 1:nrow(train)) {
if(train$x2[i] <= 30)
tmp.x2[i] <- x2_woe1
else if(train$x2[i] <= 35)
tmp.x2[i] <- x2_woe2
else if(train$x2[i] <= 40)
tmp.x2[i] <- x2_woe3
else if(train$x2[i] <= 45)
tmp.x2[i] <- x2_woe4
else if(train$x2[i] <= 50)
tmp.x2[i] <- x2_woe5
else if(train$x2[i] <= 55)
tmp.x2[i] <- x2_woe6
else if(train$x2[i] <= 60)
tmp.x2[i] <- x2_woe7
else
tmp.x2[i] <- x2_woe8
}
cutx3 = c(-Inf,0,1,3,5,Inf)
plot(cut(train$x3,cutx3))
x3_woe1=getWOE(train$x3,-Inf,0)
x3_woe2=getWOE(train$x3,0,1)
x3_woe3=getWOE(train$x3,1,3)
x3_woe4=getWOE(train$x3,3,5)
x3_woe5=getWOE(train$x3,5,Inf)
x3.woe=c(x3_woe1,x3_woe2,x3_woe3,x3_woe4,x3_woe5)
x3.woe
tmp.x3 <- 0
for(i in 1:nrow(train)) {
if(train$x3[i] <= 0)
tmp.x3[i] <- x3_woe1
else if(train$x3[i] <= 1)
tmp.x3[i] <- x3_woe2
else if(train$x3[i] <= 3)
tmp.x3[i] <- x3_woe3
else if(train$x3[i] <= 5)
tmp.x3[i] <- x3_woe4
else
tmp.x3[i] <- x3_woe5
}
cutx5 = c(-Inf,1000,2000,3000,4000,5000,6000,7500,9500,12000,Inf)
plot(cut(train$x5,cutx5))
x5_woe1=getWOE(train$x5,-Inf,1000)
x5_woe2=getWOE(train$x5,1000,2000)
x5_woe3=getWOE(train$x5,2000,3000)
x5_woe4=getWOE(train$x5,3000,4000)
x5_woe5=getWOE(train$x5,4000,5000)
x5_woe6=getWOE(train$x5,5000,6000)
x5_woe7=getWOE(train$x5,6000,7500)
x5_woe8=getWOE(train$x5,7500,9500)
x5_woe9=getWOE(train$x5,9500,12000)
x5_woe10=getWOE(train$x5,12000,Inf)
x5.woe=c(x5_woe1,x5_woe2,x5_woe3,x5_woe4,x5_woe5,x5_woe6,x5_woe7,x5_woe8,x5_woe9,x5_woe10)
x5.woe
tmp.x5 <- 0
for(i in 1:nrow(train)) {
if(train$x5[i] <= 1000)
tmp.x5[i] <- x5_woe1
else if(train$x5[i] <= 2000)
tmp.x5[i] <- x5_woe2
else if(train$x5[i] <= 3000)
tmp.x5[i] <- x5_woe3
else if(train$x5[i] <= 4000)
tmp.x5[i] <- x5_woe4
else if(train$x5[i] <= 5000)
tmp.x5[i] <- x5_woe5
else if(train$x5[i] <= 6000)
tmp.x5[i] <- x5_woe6
else if(train$x5[i] <= 7500)
tmp.x5[i] <- x5_woe7
else if(train$x5[i] <= 9500)
tmp.x5[i] <- x5_woe8
else if(train$x5[i] <= 12000)
tmp.x5[i] <- x5_woe9
else
tmp.x5[i] <- x5_woe10
}
cutx7 = c(-Inf,0,1,3,5,10,Inf)
plot(cut(train$x7,cutx7))
x7_woe1=getWOE(train$x7,-Inf,0)
x7_woe2=getWOE(train$x7,0,1)
x7_woe3=getWOE(train$x7,1,3)
x7_woe4=getWOE(train$x7,3,5)
x7_woe5=getWOE(train$x7,5,10)
x7_woe6=getWOE(train$x7,10,Inf)
x7.woe=c(x7_woe1,x7_woe2,x7_woe3,x7_woe4,x7_woe5,x7_woe6)
x7.woe
tmp.x7 <- 0
for(i in 1:nrow(train)) {
if(train$x7[i] <= 0)
tmp.x7[i] <- x7_woe1
else if(train$x7[i] <= 1)
tmp.x7[i] <- x7_woe2
else if(train$x7[i] <= 3)
tmp.x7[i] <- x7_woe3
else if(train$x7[i] <= 5)
tmp.x7[i] <- x7_woe4
else if(train$x7[i] <= 10)
tmp.x7[i] <- x7_woe5
else
tmp.x7[i] <- x7_woe6
}
cutx8= c(-Inf,0,1,2,3,5,Inf)
plot(cut(train$x8,cutx8))
x8_woe1=getWOE(train$x8,-Inf,0)
x8_woe2=getWOE(train$x8,0,1)
x8_woe3=getWOE(train$x8,1,2)
x8_woe4=getWOE(train$x8,2,3)
x8_woe5=getWOE(train$x8,3,5)
x8_woe6=getWOE(train$x8,5,Inf)
x8.woe=c(x8_woe1,x8_woe2,x8_woe3,x8_woe4,x8_woe5,x8_woe6)
x8.woe
tmp.x8 <- 0
for(i in 1:nrow(train)) {
if(train$x8[i] <= 0)
tmp.x8[i] <- x8_woe1
else if(train$x8[i] <= 1)
tmp.x8[i] <- x8_woe2
else if(train$x8[i] <= 2)
tmp.x8[i] <- x8_woe3
else if(train$x8[i] <= 3)
tmp.x8[i] <- x8_woe4
else if(train$x8[i] <= 5)
tmp.x8[i] <- x8_woe5
else
tmp.x8[i] <- x8_woe6
}
cutx9 = c(-Inf,0,1,3,5,Inf)
plot(cut(train$x9,cutx9))
x9_woe1=getWOE(train$x9,-Inf,0)
x9_woe2=getWOE(train$x9,0,1)
x9_woe3=getWOE(train$x9,1,3)
x9_woe4=getWOE(train$x9,3,5)
x9_woe5=getWOE(train$x9,5,Inf)
x9.woe=c(x9_woe1,x9_woe2,x9_woe3,x9_woe4,x9_woe5)
x9.woe
tmp.x9 <- 0
for(i in 1:nrow(train)) {
if(train$x9[i] <= 0)
tmp.x9[i] <- x9_woe1
else if(train$x9[i] <= 1)
tmp.x9[i] <- x9_woe2
else if(train$x9[i] <= 3)
tmp.x9[i] <- x9_woe3
else if(train$x9[i] <= 5)
tmp.x9[i] <- x9_woe4
else
tmp.x9[i] <- x9_woe5
}
cutx10 = c(-Inf,0,1,2,3,5,Inf)
plot(cut(train$x10,cutx10))
x10_woe1=getWOE(train$x10,-Inf,0)
x10_woe2=getWOE(train$x10,0,1)
x10_woe3=getWOE(train$x10,1,2)
x10_woe4=getWOE(train$x10,2,3)
x10_woe5=getWOE(train$x10,3,5)
x10_woe6=getWOE(train$x10,5,Inf)
x10.woe=c(x10_woe1,x10_woe2,x10_woe3,x10_woe4,x10_woe5,x10_woe6）
x10.woe
cutx10 = c(-Inf,0,1,2,3,5,Inf)
plot(cut(train$x10,cutx10))
x10_woe1=getWOE(train$x10,-Inf,0)
x10_woe2=getWOE(train$x10,0,1)
x10_woe3=getWOE(train$x10,1,2)
x10_woe4=getWOE(train$x10,2,3)
x10_woe5=getWOE(train$x10,3,5)
x10_woe6=getWOE(train$x10,5,Inf)
x10.woe=c(x10_woe1,x10_woe2,x10_woe3,x10_woe4,x10_woe5,x10_woe6)
x10.woe
tmp.x10 <- 0
for(i in 1:nrow(train)) {
if(train$x10[i] <= 0)
tmp.x10[i] <- x10_woe1
else if(train$x10[i] <= 1)
tmp.x10[i] <- x10_woe2
else if(train$x10[i] <= 2)
tmp.x10[i] <- x10_woe3
else if(train$x10[i] <= 3)
tmp.x10[i] <- x10_woe4
else if(train$x9[i] <= 5)
tmp.x10[i] <- x10_woe5
else
tmp.x10[i] <- x10_woe6
}
y<-train$y
trainWOE =cbind.data.frame(y,tmp.x2,tmp.x3,tmp.x5,tmp.x7,tmp.x8,tmp.x9,tmp.x10)
glm.fit = glm(y~.,data = trainWOE,family = binomial(link = logit))
summary(glm.fit)
#模型拟合效果很好
coe<-(glm.fit$coefficients)
coe
p <- 20/log(2)
q <- 600-20*log(15)/log(2)
Score=q + p*{as.numeric(coe[1])+as.numeric(coe[2])*tmp.x2 +as.numeric(coe[3])*tmp.x3+p*as.numeric(coe[4])*tmp.x5+p*as.numeric(coe[5])*tmp.x7+p*as.numeric(coe[6])*tmp.x8+p*as.numeric(coe[7])*tmp.x9+p*as.numeric(coe[8])*tmp.x10}
base <- q + p*as.numeric(coe[1])
base  #计算出基础得分
savehistory("C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit/Finally!!!!!.Rhistory")
