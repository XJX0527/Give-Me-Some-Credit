rm(list = ls())
setwd(dir="C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit")
getwd()
cr_data <- read.csv('C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/异常值处理完毕后的数据集.csv',stringsAsFactors = FALSE)
head(cr_data)
cr_data<-cr_data[,-1]
cr_data<-cr_data[,-1]
head(cr_data)
cor<-cor(cr_data)
library(corrplot)
corrplot(cor,method = "number")
#划分训练集和测试集
library(caret)
#数据不均衡如何划分训练集与测试集
prop.table(table(cr_data$y))
#set.seed()，该命令的作用是设定生成随机数的种子，种子是为了让结果具有重复性。如果不设定种子，生成的随机数无法重现。
#目的：是让我的模拟能够可重复出现，因为很多时候我们需要取随机数，但这段代码再跑一次的时候，结果就不一样了，
#如果需要重复出现同样的模拟结果的话，就可以用set.seed()。set.seed(100)不应将括号里的数字理解成“一百”，而是应该理解成“编号为100的随机数发生”，
#下一次再模拟可以采用200或者一一一（111）等不同的编号即可，编号设定基本可以随意。
#测试集与训练集的划分
#创建平衡数据的分割，time：创建分区的数目，p：用于训练的数据百分比，list：若为TRUE则返回值为列表
set.seed(1234)
splitIndex<-createDataPartition(cr_data$y,time=1,p=0.7,list=FALSE)
train<-cr_data[splitIndex,]
test<-cr_data[-splitIndex,]
prop.table(table(train$y))
prop.table(table(test$y))
#可以看出划分结果较好
write.csv(train,file="C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit.csv")
write.csv(test,file="C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit.csv")
#Logistic模型建立
fit<-glm(train$y~.,data=train,family = "binomial")
head(train$y)
summary(fit)
#x1,x4,x6三个变量的p值未能通过检验，直接剔除
fit2<-glm(y~x2+x3+x5+x7+x8+x9+x10,data=train,family = "binomial")
summary(fit2)
#可看出该模型可以使用
savehistory("C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit/Logistic.Rhistory")
pre <- predict(fit2,test)  #用建立的模型fit2对测试集进行预测
library(pROC)
#利用ROC曲线对模型进行评估
modelroc <- roc(test$y,pre)
plot(modelroc,print.auc=T,auc.ploygon=T,grid=c(0.1,0.2),grid.col=c('green','red'),max.auc.polygon=T,auc.ploygon.col='skyblue',print.thres=T)
#由图像所得该模型预测结果较好
