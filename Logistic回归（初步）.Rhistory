library()
library()
numeric(library())
Installing the newest version of R,
please wait for the installer file to be download and executed.
Be sure to click 'next' as needed...
试开URL’https://mirrors.ustc.edu.cn/CRAN/bin/windows/base/R-4.0.3-win.exe'
Content type 'application/octet-stream' length 88237960 bytes (84.2 MB)
downloaded 84.2 MB
The file was downloaded successfully into:
C:\Users\Lenovo\AppData\Local\Temp\RtmpUlSTeZ/R-4.0.3-win.exe
Running the installer now...
-----------------------
I am now copying  138  packages from: D:/R/R-4.0.2/library  ; into:  D:/R/R-4.0.3/library-----------------------
=====================
Done. We finished copying all the packages to the new location
I am now copying  240 packages from: D:/R/R-4.0.3/library  ; into:  D:/R/R-4.1.0/library
getwd()
update.packages(checkBuilt=TRUE, ask=FALSE)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages(
"ggplot2",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com")
)
library(ggplot2)
site="https://mirrors.tuna.tsinghua.edu.cn/CRAN"
install.packages("ggplot2", repo=site)
library(installr) #按着提示点击完就升级完啦
# 升级所有R包
install.packages("rvcheck")
library(rvcheck)
update.packages()
update_all()
.libPaths()
rm(list = ls())
setwd(dir="C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit")
getwd()
cr_data <- read.csv('C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/异常值处理完毕后的数据集.csv',stringsAsFactors = FALSE)
head(cr_data)
cr_data<-cr_data[,-1]
cr_data<-cr_data[,-1]
head(cr_data)
cor<-cor(cr_data)
corrplot(cor)
library(corrplot)
corrplot(cor)
corrplot(cor,method = "number")
#划分训练集和测试集
library(caret)
#数据不均衡如何划分训练集与测试集
prop.table(table(cr_data$y))
newtrainDat<-cr_data[cr_data$y==1,]          #只保留未违约人数的数据，占比较少
DownsampleDat<-cr_data[cr_data$y==0,]   #只保留违约人数的数据，占比较多
downsam<-sample(1:139948,11000)            #从数据1：139948中随机抽取11000个数据，默认不放回抽样，repalce=T：放回抽样
nDat<-rbind(newtrainDat,DownsampleDat[downsam,])   #根据行进行合并，就是行的叠加，m行的矩阵与n行的矩阵rbind()最后变成m+n行，合并前提：rbind(a, b)中矩阵a、b的列数必需相符
nDat<-nDat[sample(nrow(nDat)),]                      #nrow(nDat)的行数进行显示，sample()随机不放回抽取nrow(nDat)行行数的数据
rownames(nDat)<-NULL
set.seed(36)
#set.seed()，该命令的作用是设定生成随机数的种子，种子是为了让结果具有重复性。如果不设定种子，生成的随机数无法重现。
#目的：是让我的模拟能够可重复出现，因为很多时候我们需要取随机数，但这段代码再跑一次的时候，结果就不一样了，
#如果需要重复出现同样的模拟结果的话，就可以用set.seed()。set.seed(100)不应将括号里的数字理解成“一百”，而是应该理解成“编号为100的随机数发生”，
#下一次再模拟可以采用200或者一一一（111）等不同的编号即可，编号设定基本可以随意。
#测试集与训练集的划分
trainIndex <- createDataPartition(nDat$y, p = 0.8,list = FALSE, times = 1)
#创建平衡数据的分割，times：创建分区的数目，p：用于训练的数据百分比，list：若为TRUE则返回值为列表
trainIndex <- createDataPartition(nDat$y, p = 0.8,times = 1)
ntrain<-nDat[trainIndex,]         #训练集
ntest<-nDat[-trainIndex,]         #测试集
set.seed(1234)
splitIndex<-createDataPartition(cr_data$y,time=1,p=0.5,list=FALSE)
trainIndex <- createDataPartition(nDat$y, time=1,p=0.7,list=FALSE)
splitIndex<-createDataPartition(cr_data$y,time=1,p=0.7,list=FALSE)
train<-traindata[splitIndex,]
test<-traindata[-splitIndex,]
train<-cr_data[splitIndex,]
test<-cr_data[-splitIndex,]
prop.table(table(train$y))
prop.table(table(cr_data))
prop.table(table(cr_data$y))
prop.table(table(test$y))
#可以看出划分结果较好
write.csv(train,file="C:\Users\18356\Desktop\Kaggle\Give Me Some Credit\GiveMeSomeCredit.csv")
write.csv(train,file="C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit.csv")
write.csv(test,file="C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit.csv")
#Logistic模型建立
fit<-glm(train$y~.,data=train,family = "binomial")
head(train$y)
summary(fit)
#x1,x4,x6三个变量的p值未能通过检验，直接剔除
fit2<-glm(y~x2+x3+x5+x7+x8+x9+x10,data=train,family = "binomial")
summary(fit2)
#可看出该模型可以使用
savehistory("C:/Users/18356/Desktop/Kaggle/Give Me Some Credit/GiveMeSomeCredit/Logistic.Rhistory")
